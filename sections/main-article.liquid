{{ 'blog.css' | asset_url | stylesheet_tag }}
{{ 'article.css' | asset_url | stylesheet_tag }}

<div class="container">
  <div class="custom-detail-article-header">
    <div class="custom-detail-article-header-left">
      <h2>{{ article.title | escape }}</h2>
    </div>
    <div class="custom-detail-article-header-right">
      <button class="btn--primary">CUSTOM IRONS</button>
      <h6>{{ article.published_at | time_tag: format: 'date' }}</h6>
    </div>
    <div class="custom-detail-article-header-img-board">
      <img src="{{ article.image | img_url: 'master' }}" class="custom-detail-article-header-img">
    </div>
  </div>
  <div class="custom-detail-article-content">
    <div class="custom-blog-main-container">
      {%- if blog.all_tags.size > 0 -%}
        <script src="{{ 'blog-filter.js' | asset_url }}" defer="defer"></script>
        <div class="custom-blog-main-left">
          {%- liquid
            assign filter_label = 'blogs.filtering.filter_by' | t
            assign tag_values = blog.all_tags | join: ',' | prepend: "-," | split: ','
            assign tag_names = blog.all_tags | join: ',' | prepend: "All," | split: ','
    
            if current_tags
              assign selected_Value = current_tags | join
            endif
          -%}

          <div class="custom-blog-main-tabs">
            <div class="custom-blog-tabs-board">
              <button id="blog-category-tab" class="btn--primary custom-blog-category-tab">Categories</button>
              <button id="blog-tag-tab" class="btn--primary custom-blog-tag-tab active">Tags</button>
            </div>
            <div class="custom-blog-category-board">categories</div>
            <div class="custom-blog-tag-board">
              <ul class="list-none flex flex-wrap -blog-mx-2 lg:blog-text-lg custom-blog-tag-board-1" id="blog-filter-links">
                <li>
                  <a
                    href="{{ blog.url }}"
                    class="pt-2 pb-2 pl-4 pr-4 text-theme-text block{% unless current_tags %} font-bold underline{% endunless %} custom-blog-tags-tag"
                    data-tag="-">
                    {{- 'blogs.filtering.all' | t -}}
                  </a>
                </li>
                {% for tag in blog.all_tags %}
                  <li>
                    <a
                      href="{{ tag | link_to_tag: tag | split: 'href="' | last | split: '"' | first }}"
                      data-tag="{{ tag | escape }}"
                      class="pt-2 pb-2 pl-4 pr-4 text-theme-text block{% if current_tags contains tag %} font-bold underline{% endif %} custom-blog-tags-tag">
                      {{- tag -}}
                    </a>
                  </li>
                {% endfor %}
              </ul>
            </div>
            <script>
              document.addEventListener("DOMContentLoaded", function() {
                const categoryTab = document.getElementById("blog-category-tab");
                const tagTab = document.getElementById("blog-tag-tab");
                const categoryView = document.querySelector(".custom-blog-category-board");
                const tagView = document.querySelector(".custom-blog-tag-board");
                const mainContent = document.getElementById("main-content");
                mainContent.style.background = '#f4f4f4';

                categoryView.style.display = 'none';
                tagView.style.display = 'block';

// Add your click event listeners here
                categoryTab.addEventListener("click", function() {
                  categoryView.style.display = 'block';
                  tagView.style.display = 'none';
                  this.classList.add("active");
                  tagTab.classList.remove("active");
                });

                tagTab.addEventListener("click", function() {
                  categoryView.style.display = 'none';
                  tagView.style.display = 'block';
                  this.classList.add("active");
                  categoryTab.classList.remove("active");
                });
              });
            </script>
          </div>
          <div class="custom-blog-main-latest">
            <label class="custom-blog-main-latest-title">Latest Blog Post</label>
            {% for article in blog.articles limit: 6 %}
              {% render 'custom-article-card-latest'
               , article: article %}
            {% endfor %}
          </div>
        </div>
      {%- endif -%}
      <div class="custom-article-main-right">
        <div class="custom-article-main-right-1">
          {{ article.content }}
        </div>
        <div class="custom-article-main-right-2 pt-4">
          <div class="custom-article-main-previous-button">
            <a
              class="font-bold"
              {% if blog.previous_article %}
              href="{{ blog.previous_article }}"
              title="{{ blog.previous_article.title | escape }}"
              {% else %}
              role="link"
              aria-disabled="true"
              {% endif %}>
              {% render 'icon-chevron-left' %}<span class="md:inline">PREVIOUS POST</span>
            </a>
          </div>
          <div class="custom-article-share-board">
            {% render 'social-share', share_title: article.title, share_url: article.url, share_image: article.image %}
            <span class="font-bold custom-article-share">{{ 'general.social.share_heading' | t }}</span>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="custom-detail-article-footer">
    {% for article in blog.articles limit: 3 %}
      <div class="custom-detail-article-footer-content">
        {% render 'custom-article-card-bottom'
         , article: article %}
      </div>
    {% endfor %}
  </div>
</div>



<script>
  document.querySelectorAll('.article__content table').forEach((table) => {
    const wrapper = document.createElement('div');
    wrapper.className = 'scrollable-table';
    table.parentNode.insertBefore(wrapper, table);
    wrapper.appendChild(table);
  });
</script>

{% render 'structured-data-article', article: article %}

{% schema %}
  {
    "name": "Article",
    "class": "cc-main-article section section--template",
    "settings": [
      {
        "type": "header",
        "content": "Article header"
      },
      {
        "type": "checkbox",
        "id": "show_tags",
        "label": "Show tags",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_author",
        "label": "Show author",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_date",
        "label": "Show published date",
        "default": true
      }, {
        "type": "select",
        "id": "featured_image_width",
        "label": "Featured image",
        "options": [
          {
            "value": "none",
            "label": "None"
          }, {
            "value": "content",
            "label": "Content width"
          }, {
            "value": "wider",
            "label": "Content width - wider"
          }, {
            "value": "page",
            "label": "Page width"
          }
        ],
        "default": "page",
        "info": "We recommend using a landscape shaped image for your featured image. [Learn more](https://cleancanvas.co.uk/support/enterprise/templates/articles)"
      }, {
        "type": "select",
        "id": "heading_align",
        "label": "Heading alignment",
        "options": [
          {
            "value": "text-start",
            "label": "Left"
          }, {
            "value": "text-center",
            "label": "Center"
          }, {
            "value": "text-end",
            "label": "Right"
          }
        ],
        "default": "text-center"
      }, {
        "type": "header",
        "content": "Article footer"
      }, {
        "type": "checkbox",
        "id": "show_share_buttons",
        "label": "Show social share buttons",
        "default": true
      }, {
        "type": "select",
        "id": "pagination",
        "label": "Next/previous links",
        "options": [
          {
            "value": "none",
            "label": "None"
          }, {
            "value": "standard",
            "label": "Standard"
          }, {
            "value": "bar",
            "label": "Fixed bar"
          }, {
            "value": "bar-reading",
            "label": "Fixed bar with reading estimate"
          }
        ],
        "default": "standard"
      }
    ]
  }
{% endschema %}